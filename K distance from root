def printKdistance(root,k):
   
    if(root==None):
        return 0
    if k==0:
        print(root.data)
    else:
        if root.left!=None:
            self.printKdistance(root=root.left,k=k-1)
        if root.right!=None:
            self.printKdistance(root=root.right,k=k-1)
         
         
#Minimum Depth of a Binary Tree
class Solution:
    def minDepth(self, root):
        #Code here
        if root==None:
            return 999999
        t=root
        if t.left==None and t.right==None:
            return 1
        return min(self.minDepth(root.left),self.minDepth(root.right))+1
